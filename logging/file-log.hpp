
//////////////////////////////////////////////////////////////////////////
//                                                                      //
//////////////////////////////////////////////////////////////////////////

#pragma once

//////////////////////////////////////////////////////////////////////////
//
//////////////////////////////////////////////////////////////////////////

#include "ilogger.hpp"

//////////////////////////////////////////////////////////////////////////
//
//////////////////////////////////////////////////////////////////////////

namespace SQLEngine::Logging
{
    //////////////////////////////////////////////////////////////////////////
    //                                                                      //
    //////////////////////////////////////////////////////////////////////////

    class FileLog
    {
    public:
        virtual ~FileLog() = default;

    public:
        virtual void Write(const std::string &message) = 0;
        virtual void WriteLine(const std::string &message) = 0;

    public:
        static auto GetDefaultLogPath() -> const std::string;
    };

    using UFileLog = std::unique_ptr<FileLog>;

    //////////////////////////////////////////////////////////////////////////

    auto GetEasyFileLog() -> UFileLog;

    //////////////////////////////////////////////////////////////////////////
    //                                                                      //
    //////////////////////////////////////////////////////////////////////////
}

//////////////////////////////////////////////////////////////////////////
//                                                                      //
//////////////////////////////////////////////////////////////////////////
