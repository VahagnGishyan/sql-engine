
//////////////////////////////////////////////////////////////////////////
//                                                                      //
//////////////////////////////////////////////////////////////////////////

#pragma once

//////////////////////////////////////////////////////////////////////////
//
//////////////////////////////////////////////////////////////////////////

#include <map>

#include "condition.hpp"
#include "interface/i-table.hpp"

//////////////////////////////////////////////////////////////////////////
//
//////////////////////////////////////////////////////////////////////////

namespace SQLEngine::SQLOperations
{
    //////////////////////////////////////////////////////////////////////
    //                                                                  //
    //////////////////////////////////////////////////////////////////////

    class IOperation;

    using UOperation = std::unique_ptr<IOperation>;

    class IOperation
    {
       public:
        virtual ~IOperation() = default;

       public:
        virtual auto Execute(const Interface::ITable& table) const
            -> Interface::UTable = 0;
    };

    //////////////////////////////////////////////////////////////////////
    //                                                                  //
    //////////////////////////////////////////////////////////////////////

    using InsertIntoData =
        std::map<std::string, std::vector<Interface::UDynamicValue>>;

    auto PROJECT_SHARED_EXPORT CreateOpInsertInto(InsertIntoData row)
        -> UOperation;

    //////////////////////////////////////////////////////////////////////

    auto PROJECT_SHARED_EXPORT CreateOpSelect(Interface::ColumnNameList columns,
                                              UCondition condition)
        -> UOperation;

    //////////////////////////////////////////////////////////////////////

    auto PROJECT_SHARED_EXPORT CreateOpDelete(UCondition condition)
        -> UOperation;

    //////////////////////////////////////////////////////////////////////

    using UpdateData = std::map<std::string, Interface::UDynamicValue>;

    auto PROJECT_SHARED_EXPORT CreateOpUpdate(UpdateData values,
                                              UCondition condition)
        -> UOperation;

    //////////////////////////////////////////////////////////////////////
    //                                                                  //
    //////////////////////////////////////////////////////////////////////
}  // namespace SQLEngine::SQLOperations

//////////////////////////////////////////////////////////////////////////
//                                                                      //
//////////////////////////////////////////////////////////////////////////
