
//////////////////////////////////////////////////////////////////////////
//                                                                      //
//////////////////////////////////////////////////////////////////////////

#pragma once

//////////////////////////////////////////////////////////////////////////
//
//////////////////////////////////////////////////////////////////////////

#include <map>

#include "condition.hpp"
#include "interface/i-query.hpp"

//////////////////////////////////////////////////////////////////////////
//
//////////////////////////////////////////////////////////////////////////

namespace SQLEngine::Query
{
    //////////////////////////////////////////////////////////////////////
    //                                                                  //
    //////////////////////////////////////////////////////////////////////

    using InsertIntoData =
        std::map<std::string, std::vector<Interface::UDynamicValue>>;

    auto PROJECT_SHARED_EXPORT
    CopyInsertIntoData(const InsertIntoData& original) -> InsertIntoData;

    auto PROJECT_SHARED_EXPORT CreateOpInsertInto(InsertIntoData row)
        -> Interface::UQueryExecutor;

    //////////////////////////////////////////////////////////////////////

    auto PROJECT_SHARED_EXPORT CreateOpSelect(Interface::ColumnNameList columns,
                                              UCondition condition)
        -> Interface::UQueryExecutor;

    //////////////////////////////////////////////////////////////////////

    auto PROJECT_SHARED_EXPORT CreateOpDelete(UCondition condition)
        -> Interface::UQueryExecutor;

    //////////////////////////////////////////////////////////////////////

    using UpdateData = std::map<std::string, Interface::UDynamicValue>;

    auto PROJECT_SHARED_EXPORT CopyUpdateData(const UpdateData& original)
        -> UpdateData;

    auto PROJECT_SHARED_EXPORT CreateOpUpdate(UpdateData values,
                                              UCondition condition)
        -> Interface::UQueryExecutor;

    //////////////////////////////////////////////////////////////////////
    //                                                                  //
    //////////////////////////////////////////////////////////////////////

    auto PROJECT_SHARED_EXPORT CreateQuery(const std::string& tablename,
                                           Interface::UQueryExecutor condition)
        -> Interface::UQuery;

    //////////////////////////////////////////////////////////////////////
    //                                                                  //
    //////////////////////////////////////////////////////////////////////
}  // namespace SQLEngine::Query

//////////////////////////////////////////////////////////////////////////
//                                                                      //
//////////////////////////////////////////////////////////////////////////
