
//////////////////////////////////////////////////////////////////////////
//                                                                      //
//////////////////////////////////////////////////////////////////////////

#pragma once

//////////////////////////////////////////////////////////////////////////
//
//////////////////////////////////////////////////////////////////////////

#include <string>
#include <memory>

//////////////////////////////////////////////////////////////////////////
//
//////////////////////////////////////////////////////////////////////////

namespace SQLEngine::Application
{
    //////////////////////////////////////////////////////////////////////////
    //                                                                      //
    //////////////////////////////////////////////////////////////////////////

    class Info
    {
    public:
        virtual ~Info() = default;

    public:
        virtual auto GetName() const -> const std::string & = 0;
        virtual auto GetDefaultAppData(const bool createIfNotExists = true) const -> const std::string = 0;
        virtual auto GetVersion() const -> const std::string & = 0;
    };

    using UInfo = std::unique_ptr<Info>;

    //////////////////////////////////////////////////////////////////////////

    auto GetInfo() -> const Info &;

    //////////////////////////////////////////////////////////////////////////
    //                                                                      //
    //////////////////////////////////////////////////////////////////////////
}

//////////////////////////////////////////////////////////////////////////
//                                                                      //
//////////////////////////////////////////////////////////////////////////
