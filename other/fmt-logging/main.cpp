
//////////////////////////////////////////////////////////////////////////
//
//////////////////////////////////////////////////////////////////////////

#include "logging.hpp"
#include <iostream>

//////////////////////////////////////////////////////////////////////////
//
//////////////////////////////////////////////////////////////////////////

namespace FMTLog
{
    //////////////////////////////////////////////////////////////////////
    //
    //////////////////////////////////////////////////////////////////////

    int Main(const int count, char **values)
    {
        SQLEngine::Logging::Message("First log");
        SQLEngine::Logging::Info("First log");
        SQLEngine::Logging::Signal("First log");
        SQLEngine::Logging::Debug("First log");
        SQLEngine::Logging::Warning("First log");
        SQLEngine::Logging::Error("First log");
        return 0;
    }
}

//////////////////////////////////////////////////////////////////////////
//
//////////////////////////////////////////////////////////////////////////

int main(const int argc, char **argv)
{
    int returnKey = 1;
    try
    {
        returnKey = FMTLog::Main(argc, argv);
    }
    catch (std::exception &err)
    {
        std::cerr << std::string("Catch exception, type is std::exception, message is ") + err.what() << std::endl;
    }
    catch (...)
    {
        std::cerr << "Unknown type exception was not handled" << std::endl;
    }
    return (returnKey);
}

//////////////////////////////////////////////////////////////////////////
//
//////////////////////////////////////////////////////////////////////////
