
//////////////////////////////////////////////////////////////////////////
//                                                                      //
//////////////////////////////////////////////////////////////////////////

#pragma once

//////////////////////////////////////////////////////////////////////////
//
//////////////////////////////////////////////////////////////////////////

#include "i-database.hpp"

//////////////////////////////////////////////////////////////////////////
//
//////////////////////////////////////////////////////////////////////////

namespace SQLEngine::Interface
{
    //////////////////////////////////////////////////////////////////////
    //                                                                  //
    //////////////////////////////////////////////////////////////////////

    class IDataBaseReader;

    using UDataBaseReader    = std::unique_ptr<IDataBaseReader>;
    using ShDataBaseReader   = std::shared_ptr<IDataBaseReader>;
    using WDataBaseReader    = std::weak_ptr<IDataBaseReader>;
    using DataBaseReaderList = std::vector<UDataBaseReader>;

    //////////////////////////////////////////////////////////////////////

    class PROJECT_SHARED_EXPORT IDataBaseReader : public IDBObject
    {
       public:
        virtual auto Read() const -> UDataBase = 0;
    };

    //////////////////////////////////////////////////////////////////////
    //                                                                  //
    //////////////////////////////////////////////////////////////////////

    class IDataBaseWriter;

    using UDataBaseWriter    = std::unique_ptr<IDataBaseWriter>;
    using ShDataBaseWriter   = std::shared_ptr<IDataBaseWriter>;
    using WDataBaseWriter    = std::weak_ptr<IDataBaseWriter>;
    using DataBaseWriterList = std::vector<UDataBaseWriter>;

    //////////////////////////////////////////////////////////////////////

    class PROJECT_SHARED_EXPORT IDataBaseWriter : public IDBObject
    {
       public:
        virtual void Write(const IDataBase& database) const = 0;
    };

    //////////////////////////////////////////////////////////////////////
    //                                                                  //
    //////////////////////////////////////////////////////////////////////

    class IDataBaseStream;

    using UDataBaseStream    = std::unique_ptr<IDataBaseStream>;
    using ShDataBaseStream   = std::shared_ptr<IDataBaseStream>;
    using WDataBaseStream    = std::weak_ptr<IDataBaseStream>;
    using DataBaseStreamList = std::vector<UDataBaseStream>;

    ////////////////////////////////////////////////////////////////////

    class PROJECT_SHARED_EXPORT IDataBaseStream : public IDataBaseReader,
                                                  public IDataBaseWriter
    {
    };

    //////////////////////////////////////////////////////////////////////
    //                                                                  //
    //////////////////////////////////////////////////////////////////////
}  // namespace SQLEngine::Interface

//////////////////////////////////////////////////////////////////////////
//                                                                      //
//////////////////////////////////////////////////////////////////////////
